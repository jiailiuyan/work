<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:m="clr-namespace:DevComponents.WPF.Metro"
                    xmlns:ctrls="clr-namespace:DevComponents.WPF.Controls;assembly=DevComponents.WPF.Controls">

    <Thickness x:Key="{x:Static ctrls:ButtonResources.ButtonPaddingKey}" Left="7" Top="5" Right="7" Bottom="5" />

    <!--<ControlTemplate x:Key="{x:Static ctrls:ButtonResources.ButtonBaseTemplateKey}" TargetType="ButtonBase">
        <Grid Background="Transparent">
            <Border Name="NormalBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
            <Border Name="HoverBorder" Opacity="0" Background="{DynamicResource {x:Static ctrls:ButtonResources.ButtonHoverBackgroundKey}}" />
            <Border Name="PressedBorder" Opacity="0" BorderThickness="2"
                    BorderBrush="{DynamicResource {x:Static ctrls:ButtonResources.ButtonPressedBorderBrushKey}}" 
                    Background="{DynamicResource {x:Static ctrls:ButtonResources.ButtonPressedBackgroundKey}}" />
            <Border Name="CheckedBorder" Opacity="0" BorderThickness="2" 
                    BorderBrush="{DynamicResource {x:Static ctrls:ButtonResources.ButtonCheckedBorderBrushKey}}" 
                    Background="{DynamicResource {x:Static ctrls:ButtonResources.ButtonCheckedBackgroundKey}}" />
            <Rectangle Name="FocusRect" Opacity="0" Stroke="{DynamicResource {x:Static m:MetroColors.BaseBrushKey}}" Margin="1" StrokeThickness="1" StrokeDashArray="1,2" />
            <ContentPresenter Name="Content" ctrls:ControlBehavior.TemplatedParent="{Binding RelativeSource={RelativeSource TemplatedParent}}" 
                              Margin="{TemplateBinding Padding}" Focusable="False" 
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(ctrls:ControlBehavior.TemplatedParent).(ContentControl.Foreground)">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static ctrls:ButtonResources.ButtonHoverForegroundKey}}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(ctrls:ControlBehavior.TemplatedParent).(ContentControl.Foreground)">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static ctrls:ButtonResources.ButtonPressedForegroundKey}}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="Opacity" Duration="0" To="0.4" />
                            <DoubleAnimation Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="0.4" />
                        </Storyboard>
                    </VisualState>
                    <VisualState Name="Checked">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="(ctrls:ControlBehavior.TemplatedParent).(ContentControl.Foreground)">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{DynamicResource {x:Static ctrls:ButtonResources.ButtonCheckedForegroundKey}}" />
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup Name="FocusStates">
                    <VisualState Name="Unfocused" />
                    <VisualState Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="FocusRect" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
    </ControlTemplate>-->
    
    <!-- Style for Radio Button -->
    <Style x:Key="{x:Static ctrls:ButtonResources.RadioButtonStyleKey}" TargetType="{x:Type RadioButton}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static m:MetroColors.CanvasBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static ctrls:ButtonResources.ButtonNormalForegroundKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid VerticalAlignment="Top">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="12" Height="12" Background="Transparent" SnapsToDevicePixels="True">
                                    <Grid Name="NormalBorder">
                                        <Ellipse Stretch="Fill" StrokeThickness="1" Stroke="{TemplateBinding BorderBrush}" Fill="{TemplateBinding Background}" />
                                        <Ellipse Stretch="Fill" Margin="2" StrokeThickness="1" 
                                             Stroke="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}" />
                                        <Ellipse Name="CheckedGlyph1" Margin="3" Opacity="0" Stretch="Fill"  
                                             Fill="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                    </Grid>
                                    <Grid Name="HoverBorder" Opacity="0">
                                        <Ellipse Stretch="Fill" StrokeThickness="1" Stroke="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" Fill="{TemplateBinding Background}" />
                                        <Ellipse Stretch="Fill" Margin="2" StrokeThickness="1"
                                             Stroke="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}"
                                             Fill="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}" />
                                        <Ellipse Name="CheckedGlyph2" Margin="3" Opacity="0" Stretch="Fill" 
                                             Fill="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                    </Grid>
                                    <Grid Name="PressedBorder" Opacity="0">
                                        <Ellipse Stretch="Fill" StrokeThickness="1" Stroke="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" Fill="{TemplateBinding Background}" />
                                        <Ellipse Stretch="Fill" Margin="2" StrokeThickness="1"
                                             Stroke="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}"
                                             Fill="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" />
                                        <Ellipse Name="CheckedGlyph3" Margin="3" Opacity="0" Stretch="Fill" 
                                             Fill="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                    </Grid>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="true" />
                        </BulletDecorator>
                        <Rectangle Name="FocusRect" SnapsToDevicePixels="True" Opacity="0" StrokeThickness="1" StrokeDashArray="1 1" Stroke="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Unfocused" />
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusRect" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedGlyph1" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph2" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph3" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static ctrls:CommonResources.DisabledForegroundKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for CheckBox -->
    <Style  x:Key="{x:Static ctrls:ButtonResources.CheckBoxStyleKey}" TargetType="{x:Type CheckBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{DynamicResource {x:Static m:MetroColors.CanvasBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static ctrls:ButtonResources.ButtonNormalForegroundKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid VerticalAlignment="Top">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Grid Width="13" Height="13" Background="Transparent" SnapsToDevicePixels="True">
                                    <Border Name="NormalBorder" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                                        <Border Margin="1" Padding="0,0,0,1" BorderThickness="{TemplateBinding BorderThickness}" 
                                            BorderBrush="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}">
                                            <Grid>
                                                <Path Name="CheckedGlyph1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-1,-1,-1" Stretch="Fill" 
                                                  Opacity="0" StrokeThickness="2" Data="M 0,0.6 L 0.4,1 1,0"
                                                  Stroke="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                                <Rectangle Name="IndeterminantGlyph1" Opacity="0" Stretch="Fill" Margin="-1"
                                                       Fill="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <Border Name="HoverBorder" Opacity="0" BorderThickness="1" Background="{TemplateBinding Background}"
                                        BorderBrush="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}">
                                        <Border Margin="1" Padding="0,0,0,1" BorderThickness="{TemplateBinding BorderThickness}" 
                                            BorderBrush="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}" 
                                            Background="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}">
                                            <Grid>
                                                <Path Name="CheckedGlyph2" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-1,-1,-1" Stretch="Fill" 
                                                  Opacity="0" StrokeThickness="2" Data="M 0,0.6 L 0.4,1 1,0"
                                                  Stroke="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                                <Rectangle Name="IndeterminantGlyph2" Opacity="0" Stretch="Fill" Margin="-1"
                                                       Fill="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                    <Border Name="PressedBorder" Opacity="0" BorderThickness="1" Background="{TemplateBinding Background}"
                                        BorderBrush="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}">
                                        <Border Margin="1" Padding="0,0,0,1" BorderThickness="{TemplateBinding BorderThickness}" 
                                            BorderBrush="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}">
                                            <Grid>
                                                <Path Name="CheckedGlyph3" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,-1,-1,-1" Stretch="Fill" 
                                                  Opacity="0" StrokeThickness="2" Data="M 0,0.6 L 0.4,1 1,0"
                                                  Stroke="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                                <Rectangle Name="IndeterminantGlyph3" Opacity="0" Stretch="Fill" Margin="-1"
                                                       Fill="{DynamicResource {x:Static m:MetroColors.BaseDarkBrushKey}}" />
                                            </Grid>
                                        </Border>
                                    </Border>
                                </Grid>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="true" />
                        </BulletDecorator>
                        <Rectangle Name="FocusRect" SnapsToDevicePixels="True" Opacity="0" StrokeThickness="1" StrokeDashArray="1 1" Stroke="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" />
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState Name="Normal" />
                                <VisualState Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                        <DoubleAnimation Storyboard.TargetName="NormalBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="0" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Unfocused" />
                                <VisualState Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="FocusRect" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="IndeterminantGlyph1" Property="Opacity" Value="1" />
                            <Setter TargetName="IndeterminantGlyph2" Property="Opacity" Value="1" />
                            <Setter TargetName="IndeterminantGlyph3" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckedGlyph1" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph2" Property="Opacity" Value="1" />
                            <Setter TargetName="CheckedGlyph3" Property="Opacity" Value="1" />
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static ctrls:CommonResources.DisabledForegroundKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>