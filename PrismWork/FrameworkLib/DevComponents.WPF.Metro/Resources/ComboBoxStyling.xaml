<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:m="clr-namespace:DevComponents.WPF.Metro"
                    xmlns:ctrls="clr-namespace:DevComponents.WPF.Controls;assembly=DevComponents.WPF.Controls">

    <Thickness x:Key="{x:Static ctrls:SelectorResources.ComboBoxPaddingKey}" Left="7" Top="5" Right="7" Bottom="5" />
    <Thickness x:Key="{x:Static ctrls:SelectorResources.ComboBoxItemPaddingKey}" Left="7" Top="2" Right="4" Bottom="2" />
    
    <!-- Style for ComboBoxItem -->
    <Style x:Key="{x:Static m:CommonControlsResources.ComboBoxItemStyleKey}" TargetType="ComboBoxItem">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static ctrls:SelectorResources.ComboBoxItemPaddingKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="Transparent">
                        <Border Name="Border" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static ctrls:SelectorResources.ComboBoxItemHighlightForegroundKey}}" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource {x:Static ctrls:SelectorResources.ComboBoxItemHighlightBrushKey}}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource {x:Static ctrls:SelectorResources.ComboBoxItemHighlightBorderBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Control Template for ComboBox when IsEditable is True -->
    <ControlTemplate x:Key="{x:Static m:CommonControlsResources.ComboBoxIsEditableTemplateKey}" TargetType="ComboBox">
        <Grid Background="Transparent">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Border Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" 
                    Background="{TemplateBinding Background}" />

            <TextBox x:Name="EditableTextBox" Foreground="{TemplateBinding Foreground}" Padding="{TemplateBinding Padding}" IsReadOnly="{TemplateBinding IsReadOnly}"
                     VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                     Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Text, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Template>
                    <ControlTemplate TargetType="TextBox">
                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}" Margin="0"
                                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" 
                                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </ControlTemplate>
                </TextBox.Template>
            </TextBox>

            <ToggleButton Name="Toggle" Grid.Column="1" ClickMode="Press" VerticalContentAlignment="Center" Margin="2" Padding="0" Width="15" ctrls:ToggleButtonBehavior.InterceptClick="True"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Path HorizontalAlignment="Center" VerticalAlignment="Center" 
                          Fill="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=Foreground}" Data="M 0,0 L 7,0 3.5,3.5 Z" />
            </ToggleButton>

            <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                <Border x:Name="DropDownBorder" BorderThickness="1" Margin="0,0,4,4" SnapsToDevicePixels="True"
                        MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        BorderBrush="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" 
                        Background="{DynamicResource {x:Static m:MetroColors.CanvasBrushKey}}">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="4" Opacity="0.3" ShadowDepth="4" />
                    </Border.Effect>
                    <ScrollViewer SnapsToDevicePixels="True" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Control Template for ComboBox when IsEditable is False -->
    <ControlTemplate x:Key="{x:Static m:CommonControlsResources.ComboBoxUneditableTemplateKey}" TargetType="{x:Type ComboBox}">
        <Grid Background="Transparent">
            <ToggleButton Name="ToggleButton" ClickMode="Press" Padding="0" Focusable="False" ctrls:ToggleButtonBehavior.InterceptClick="True"
                          Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                          HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <ContentPresenter Name="ContentPresenter" Margin="{TemplateBinding Padding}"
                                      Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                                      ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                    <Path Grid.Column="1" VerticalAlignment="Center" Margin="0,0,4,0" 
                          Fill="{Binding ElementName=ToggleButton, Path=Foreground}" Data="M 0,0 L 7,0 3.5,3.5 Z" />
                </Grid>
            </ToggleButton>
            <Rectangle Name="FocusRect" Margin="2" Opacity="0" StrokeThickness="1" StrokeDashArray="1 1" Stroke="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" />
            <Popup Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                <Border x:Name="DropDownBorder" BorderThickness="1" Margin="0,0,4,4" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        BorderBrush="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" 
                        Background="{DynamicResource {x:Static m:MetroColors.CanvasBrushKey}}">
                    <Border.Effect>
                        <DropShadowEffect BlurRadius="4" Opacity="0.3" ShadowDepth="4" />
                    </Border.Effect>
                    <ScrollViewer SnapsToDevicePixels="True" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" 
                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                        <ItemsPresenter Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </ScrollViewer>
                </Border>
            </Popup>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup Name="FocusStates">
                    <VisualState Name="Unfocused" />
                    <VisualState Name="Focused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="FocusRect" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Style for ComboBox -->
    <Style x:Key="{x:Static m:CommonControlsResources.ComboBoxStyleKey}" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="{DynamicResource {x:Static ctrls:SelectorResources.ComboBoxPaddingKey}}" />
        <Setter Property="MinHeight" Value="20" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
        <Setter Property="ItemContainerStyle" Value="{DynamicResource {x:Static m:CommonControlsResources.ComboBoxItemStyleKey}}" />
        <Style.Triggers>
            <Trigger Property="IsEditable" Value="True">
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template" Value="{DynamicResource {x:Static m:CommonControlsResources.ComboBoxIsEditableTemplateKey}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static ctrls:CommonResources.TextBoxBorderBrushKey}}" />
                <Setter Property="Background" Value="{DynamicResource {x:Static ctrls:CommonResources.TextBoxBackgroundKey}}" />
            </Trigger>
            <Trigger Property="IsEditable" Value="False">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}" />
                <Setter Property="Template" Value="{DynamicResource {x:Static m:CommonControlsResources.ComboBoxUneditableTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>