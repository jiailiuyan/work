<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ctrls="clr-namespace:DevComponents.WPF.Controls;assembly=DevComponents.WPF.Controls"
                    xmlns:m="clr-namespace:DevComponents.WPF.Metro">
    
    <ctrls:NullableToBooleanConverter x:Key="NullableToBooleanConverter" />
    
    <Style x:Key="MetroButtonBaseStyleKey" TargetType="m:MetroButtonBase">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="m:MetroButtonBase">
                    <Grid Name="MainGrid">
                        <Border Name="NormalBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                        <Border Name="HoverBorder" Opacity="0" Background="{DynamicResource {x:Static m:MetroColors.BaseBrushKey}}" />
                        <Border Name="PressedBorder" Grid.ColumnSpan="6" Opacity="0" BorderThickness="2"
                                BorderBrush="{DynamicResource {x:Static m:MetroColors.CanvasDarkBrushKey}}" Background="{DynamicResource {x:Static m:MetroColors.CanvasBrushKey}}" />
                        <Border Name="CheckedBorder" Grid.ColumnSpan="6" Opacity="0" BorderThickness="2" BorderBrush="{DynamicResource {x:Static m:MetroColors.BaseBrushKey}}" 
                                Background="{DynamicResource {x:Static m:MetroColors.CanvasLightBrushKey}}" />
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Name="SpacerColumn" Width="4" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Image Name="Img" Stretch="None" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ImageSource}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            <ContentPresenter Name="ContentPresenter" Grid.Column="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                        </Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="HoverBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="PressedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="FocusStates">
                                <VisualState Name="Unfocused" />
                                <VisualState Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup Name="CheckedStates">
                                <VisualState Name="Unchecked" />
                                <VisualState Name="Indeterminate" />
                                <VisualState Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="CheckedBorder" Storyboard.TargetProperty="Opacity" Duration="0" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroColors.BaseTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.34" />
                        </Trigger>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="SpacerColumn" Property="Width" Value="0" />
                        </Trigger>
                        <Trigger SourceName="Img" Property="Source" Value="{x:Null}">
                            <Setter TargetName="SpacerColumn" Property="Width" Value="0" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Foreground.Color}" Value="{x:Static Colors.White}" />
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=AltImageSource, Converter={StaticResource NullableToBooleanConverter}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Img" Property="Source" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=AltImageSource}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="m:MetroButton" BasedOn="{StaticResource MetroButtonBaseStyleKey}" />
    <Style TargetType="m:MetroToggleButton" BasedOn="{StaticResource MetroButtonBaseStyleKey}">
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>