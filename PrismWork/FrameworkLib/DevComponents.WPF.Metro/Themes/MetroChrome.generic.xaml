<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:m="clr-namespace:DevComponents.WPF.Metro"
                    xmlns:ctrls="clr-namespace:DevComponents.WPF.Controls;assembly=DevComponents.WPF.Controls">

    <Style x:Key="{x:Static m:MetroChrome.SystemButtonStyleKey}" TargetType="Button">
        <Setter Property="Padding" Value="0,0,0,6" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroChrome.ForegroundKey}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Bottom" />
        <Setter Property="Width" Value="26" />
        <Setter Property="Height" Value="20" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter Margin="{TemplateBinding Padding}" 
                                          VerticalAlignment="Bottom" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroChrome.InactiveForegroundKey}}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.25" />
            </Trigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroChrome.InactiveForegroundKey}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <ContextMenu x:Key="MetroChromeContextMenu">
        <MenuItem  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"
                   Command="{x:Static ctrls:WindowCommands.RestoreCommand}" Header="{DynamicResource {x:Static Member=ctrls:WindowCommands.RestoreStringKey}}">
            <MenuItem.Icon>
                <Grid Width="16" Height="16">
                    <Grid Margin="0,0,0,3" VerticalAlignment="Bottom" HorizontalAlignment="Center">
                        <Rectangle Height="6" Width="7" StrokeThickness="2" Margin="3,0,0,3" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                            Stroke="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
                        <Rectangle Height="6" Width="8" StrokeThickness="2" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                            Fill="{DynamicResource {x:Static m:MetroColors.CanvasBrushKey}}"
                                            Stroke="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
                    </Grid>
                </Grid>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"
                   Command="{x:Static ctrls:WindowCommands.MoveCommand}" Header="{DynamicResource {x:Static Member=ctrls:WindowCommands.MoveStringKey}}" />
        <MenuItem Command="{x:Static ctrls:WindowCommands.SizeCommand}" Header="{DynamicResource {x:Static Member=ctrls:WindowCommands.SizeStringKey}}" />
        <MenuItem  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"
                   Command="{x:Static ctrls:WindowCommands.MinimizeCommand}" Header="{DynamicResource {x:Static Member=ctrls:WindowCommands.MinimizeStringKey}}">
            <MenuItem.Icon>
                <Grid Width="16" Height="16">
                    <Rectangle Margin="0,0,0,5" VerticalAlignment="Bottom" HorizontalAlignment="Center" 
                               Height="2" Width="9" Fill="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
                </Grid>
            </MenuItem.Icon>
        </MenuItem>
        <MenuItem  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}"
                   Command="{x:Static ctrls:WindowCommands.MaximizeCommand}" Header="{DynamicResource {x:Static Member=ctrls:WindowCommands.MaximizeStringKey}}">
            <MenuItem.Icon>
                <Grid Width="16" Height="16">
                    <Rectangle Margin="0,0,0,4" VerticalAlignment="Bottom" HorizontalAlignment="Center"
                               Height="7" Width="9" StrokeThickness="2" Stroke="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
                </Grid>
            </MenuItem.Icon>
        </MenuItem>
        <Separator Style="{DynamicResource {x:Static MenuItem.SeparatorStyleKey}}"/>
        <MenuItem  CommandTarget="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget}" Foreground="AliceBlue"
                   FontWeight="Bold" Command="{x:Static ctrls:WindowCommands.CloseCommand}" Header="{DynamicResource {x:Static Member=ctrls:WindowCommands.CloseStringKey}}">
            <MenuItem.Icon>
                <Grid Width="16" Height="16">
                    <Grid Margin="0,0,0,3" VerticalAlignment="Bottom" HorizontalAlignment="Center" UseLayoutRounding="True">
                        <Line X1="0" X2="8" Y1="0" Y2="8" StrokeThickness="2.5" Stroke="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
                        <Line X1="0" X2="8" Y1="8" Y2="0" StrokeThickness="2.5" Stroke="{DynamicResource {x:Static m:MetroColors.TextBrushKey}}" />
                    </Grid>
                </Grid>
            </MenuItem.Icon>
        </MenuItem>
    </ContextMenu>

    <Style TargetType="m:MetroChrome">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Background" Value="{DynamicResource {x:Static m:MetroColors.CanvasBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static m:MetroChrome.ForegroundKey}}" />
        <Setter Property="ContextMenu" Value="{StaticResource MetroChromeContextMenu}" />
        <Setter Property="Padding" Value="4,4,0,4" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="m:MetroChrome">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Image Name="WindowIcon" MaxWidth="16" MaxHeight="16" VerticalAlignment="Center" Source="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Icon}" />
                                <ContentPresenter Name="QATPresenter" Grid.Column="1" Content="{TemplateBinding QuickAccessToolBar}" />
                            </Grid>

                            <TextBlock Name="TitleTextBlock" Focusable="False" Grid.Column="1" Margin="5,0" TextTrimming="CharacterEllipsis"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                       Text="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Title}" />

                            <Grid Grid.Column="2" HorizontalAlignment="Right">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <StackPanel Orientation="Horizontal" IsItemsHost="True" />
                                <Button Name="MinimizeButton" Focusable="True" Grid.Column="1" Style="{DynamicResource {x:Static m:MetroChrome.SystemButtonStyleKey}}" 
                                    Command="{x:Static ctrls:WindowCommands.MinimizeCommand}" ToolTip="{DynamicResource {x:Static ctrls:WindowCommands.MinimizeStringKey}}">
                                    <Rectangle Height="5" Width="11" Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                </Button>
                                <Button Name="MaximizeButton" Grid.Column="2" Style="{DynamicResource {x:Static m:MetroChrome.SystemButtonStyleKey}}"
                                    Command="{x:Static ctrls:WindowCommands.MaximizeCommand}" ToolTip="{DynamicResource {x:Static ctrls:WindowCommands.MaximizeStringKey}}">
                                    <Rectangle Height="9" Width="11" StrokeThickness="3" Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                </Button>
                                <Button Name="RestoreButton" Grid.Column="2" Visibility="Collapsed" Style="{DynamicResource {x:Static m:MetroChrome.SystemButtonStyleKey}}" 
                                    Command="{x:Static ctrls:WindowCommands.RestoreCommand}" ToolTip="{DynamicResource {x:Static ctrls:WindowCommands.RestoreStringKey}}">
                                    <Grid>
                                        <Rectangle Height="8" Width="10" StrokeThickness="3" Margin="4,0,0,4" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                        <Rectangle Height="8" Width="10" StrokeThickness="3" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                                            Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                    </Grid>
                                </Button>
                                <Button Name="CloseButton" Margin="0,0,2,0" Grid.Column="3" Style="{DynamicResource {x:Static m:MetroChrome.SystemButtonStyleKey}}"
                                    Command="{x:Static ctrls:WindowCommands.CloseCommand}" ToolTip="{DynamicResource {x:Static ctrls:WindowCommands.CloseStringKey}}">
                                    <!--<TextBlock Text="&#xd3;" Margin="0,0,0,-4" FontSize="16" FontFamily="Wingdings 2" />-->
                                    <Grid Margin="0,0,0,-1" UseLayoutRounding="True">
                                        <Line X1="0" X2="9" Y1="0" Y2="9" StrokeThickness="4" 
                                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                        <Line X1="0" X2="9" Y1="9" Y2="0" StrokeThickness="4"
                                        Stroke="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}" />
                                    </Grid>
                                </Button>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HideWindowTitle" Value="True">
                            <Setter TargetName="TitleTextBlock" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HideWindowIcon" Value="True">
                            <Setter TargetName="WindowIcon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=IsActive}" Value="False">
                            <Setter TargetName="TitleTextBlock" Property="Foreground" Value="{DynamicResource {x:Static m:MetroChrome.InactiveForegroundKey}}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ResizeMode}" Value="NoResize">
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <Trigger Property="HideMinimizeMaximizeButtons" Value="True">
                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="HideSystemButtons" Value="True">
                            <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MaximizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RestoreButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>